<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD mapper 3.0//en"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "noticeMapper">
<resultMap type="notice" id="noticeResult">
<id property="nno" column="nno" />
<result property="ntitle" column="ntitle" />
<result property="ncontent" column="ncontent" />
<result property="ndate" column="ndate" />
<result property="upbno" column="upbno" />
<result property="bname" column="bname" />
<result property="readcount" column="readcount"/>
<result property="nickname" column="nickname" />
<result property="ano" column="ano" />
<result property="nreply_lev" column="nreply_lev" />
<result property="replybno" column="replybno" />
</resultMap> 

	<select id="selectList" parameterType="HashMap" resultMap="noticeResult">
		<choose>
		<when test='ntitle == null'><!-- 게시판리스트검색 -->
			select ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, ano, nickname from
		(select rank() over(order by nno desc) ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname
		 from notice n , account a where a.ano=n.ano and (upbno = 0 and bname = #{bname} and nreply_lev = 0)) where ranks between #{sNum} and #{eNum} 
		</when>
		<when test="ntitle != null"><!-- 제목으로 리스트검색 -->
		select ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, ano, nickname from
		(select rank() over(order by nno desc) ranks, nno,  ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname
		 from notice n ,  account a where a.ano=n.ano and (upbno = 0 and bname = #{bname} and nreply_lev = 0)) where ranks between #{sNum} and #{eNum} 
		 and ntitle like '%'||#{ntitle}||'%'
		</when>
		<when test="nickname != null"><!-- 작성자로 리스트검색 -->
		select ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, ano, nickname from
		(select rank() over(order by nno desc) ranks, nno,  ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname
		 from notice n ,  account a where a.ano=n.ano and (upbno = 0 and bname = #{bname} and nreply_lev = 0)) where ranks between #{sNum} and #{eNum} 
		 and nickname like '%'||#{nickname}||'%'
		</when>
		</choose>

			</select>
	<select id="getListCount" parameterType="notice" resultType="int">
	<choose><when test="ntitle == null">
	select count(*) from notice where bname = #{bname} and upbno = #{upbno}
	</when>
	<otherwise>
	select count(*) from notice where bname = #{bname} and upbno = 0 and ntitle like '%'||#{ntitle}||'%'
	</otherwise>
	</choose>
	</select>
	
	
	<select id="selectOne" parameterType="int" resultType="notice">
	select nno, ntitle, ncontent, ndate, upbno, bname, readcount, nickname, pimage, n.ano ano from notice n, account a where
	  n.ano = a.ano and n.nno = #{nno}   
	</select>
	
	<select id="selectDetailList" parameterType="int" resultMap="noticeResult" >

		select  nno, ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname, pimage, nreply_lev, replybno
		from notice n, account a where n.ano = a.ano and (upbno = #{upbno} or
		 upbno in (select nno from notice where upbno = #{upbno}))order by replybno desc, nno

	</select>
	
	<select id="getReplyCount" parameterType="int" resultType="int">
	select count(*) from notice where upbno = #{nno} and  nno != #{nno}
	</select>
	
	<update id="upReadCount" parameterType="int">
	update notice
	set readcount = readcount + 1 where nno = #{nno}
	</update>
	
	<!-- 게시판 댓글 공용으로 쓰느 update -->
	<update id="update" parameterType="notice">
	<choose>
	<when test="ntitle !=null">
		update notice
	set ntitle = #{ntitle}, ncontent = #{ncontent} where nno = #{nno}
	</when>
	<otherwise>
	update notice
	set ncontent = #{ncontent} where nno = #{nno}
	</otherwise>
	</choose>
	
	</update>
	
	<insert id="insert" parameterType="notice">
	<choose>
	<when test="ntitle !=null">
	insert into notice(nno, ntitle, ncontent, ndate, upbno, readcount, ano, bname)
	values(seq_nno.nextval, #{ntitle}, #{ncontent}, sysdate, 0, 0, #{ano}, #{bname})
	</when>
	<when test="nreply_lev == 1">
	insert into notice(nno, ncontent, ndate, upbno, readcount, ano, bname, nreply_lev, replybno)
	values(seq_nno.nextval, #{ncontent}, sysdate, #{upbno}, 0, #{ano}, #{bname}, #{nreply_lev}, seq_nno.currval)
	</when>
	<when test="nreply_lev == 2">
	insert into notice(nno, ncontent, ndate, upbno, readcount, ano, bname, nreply_lev, replybno)
	values(seq_nno.nextval, #{ncontent}, sysdate, #{upbno}, 0, #{ano}, #{bname}, #{nreply_lev}, #{replybno})
	</when>
	</choose>
	</insert>
	
	<delete id="delete" parameterType="int">
	delete from notice
	where nno = #{nno} or upbno = #{nno}
	</delete>
	
</mapper>