<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD mapper 3.0//en"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "noticeMapper">
<resultMap type="notice" id="noticeResult">
<id property="nno" column="nno" />
<result property="ntitle" column="ntitle" />
<result property="ncontent" column="ncontent" />
<result property="ndate" column="ndate" />
<result property="upbno" column="upbno" />
<result property="bname" column="bname" />
<result property="readcount" column="readcount"/>
<result property="nickname" column="nickname" />
<result property="ano" column="ano" />
</resultMap> 

	<select id="selectList" parameterType="HashMap" resultMap="noticeResult">
		select ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, ano, nickname from
		(select rank() over(order by nno desc) ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname
		 from notice n , board b, account a where n.bno = b.bno and a.ano=n.ano and (upbno = 0 and n.bno = #{bno})) where ranks between #{sNum} and #{eNum} 
			</select>
	
	<select id="searchTitle" parameterType="HashMap" resultMap="noticeResult">
		select ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, ano, nickname from
		(select rank() over(order by nno desc) ranks, nno, ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname
		 from notice n , board b, account a where n.bno = b.bno and a.ano=n.ano and (upbno = 0 and n.bno = #{bno})) where ranks between #{sNum} and #{eNum} 
		 and ntitle like '%'||#{title}||'%'
	</select>
	
	<select id="getListCount" parameterType="HashMap" resultType="int">
	select count(*) from notice where bno = #{bno} and upbno = #{upbno}
	</select>
	
	<select id="getListCountWithTitle" parameterType="HashMap" resultType="int">
	select count(*) from notice where bno = #{bno} and ntitle like '%'||#{title}||'%'
	</select>
	
	<select id="selectOne" parameterType="int" resultType="notice">
	select nno, ntitle, n.bno bno, ncontent, ndate, upbno, bname, readcount, nickname, pimage, n.ano ano from notice n, account a, board b where
	  n.ano = a.ano and b.bno = n.bno and n.nno = #{nno}   
	</select>
	
	<select id="selectDetailList" parameterType="int" resultMap="noticeResult" >

		select nno, n.bno bno, ntitle, ncontent, ndate, upbno, bname, readcount, n.ano ano, nickname, pimage
		from notice n, account a, board b where n.bno = b.bno and n.ano = a.ano and upbno = #{nno} order by ndate desc

	</select>
	
	<select id="getReplyCount" parameterType="int" resultType="int">
	select count(*) from notice where upbno = #{nno} and  nno != #{nno}
	</select>
	
	<update id="upReadCount" parameterType="int">
	update notice
	set readcount = readcount + 1 where nno = #{nno}
	</update>
	
	<!-- 게시판 댓글 공용으로 쓰느 update -->
	<update id="update" parameterType="notice">
	<choose>
	<when test="ntitle !=null">
		update notice
	set ntitle = #{ntitle}, ncontent = #{ncontent} where nno = #{nno}
	</when>
	<otherwise>
	update notice
	set ncontent = #{ncontent} where nno = #{nno}
	</otherwise>
	</choose>
	
	</update>
	
	<insert id="insert" parameterType="notice">
	<choose>
	<when test="ntitle !=null">
	insert into notice
	values(seq_nno.nextval, #{bno}, #{ntitle}, #{ncontent}, sysdate, 0, 0, #{ano})
	</when>
	<otherwise>
	insert into notice(nno, bno, ncontent, ndate, upbno, readcount, ano)
	values(seq_nno.nextval, #{bno}, #{ncontent}, sysdate, #{upbno}, 0, #{ano})
	</otherwise>
	</choose>
	</insert>
	
	<delete id="delete" parameterType="int">
	delete from notice
	where nno = #{nno} or upbno = #{nno}
	</delete>
	
</mapper>